#include "DHT.h"
#include <Wire.h>
#include <Adafruit_GFX.h>//Adafruit GFX Library graphic Library
#include <Adafruit_SSD1306.h>

#define DHTPIN D3
#define DHTTYPE DHT11
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     0 // Reset pin # (or -1 if sharing Arduino reset pin)
#define NUMFLAKES     10 // Number of snowflakes in the animation example
#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16

DHT dht(DHTPIN, DHTTYPE);
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);//&wire -> object address

static const unsigned PROGMEM char temperature_bmp [] = {
0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xE7, 0x00, 0x00, 0xC3, 0x00, 0x00, 0xC3, 0x00, 0x00,
0xC3, 0x00, 0x00, 0xC3, 0x00, 0x00, 0xC3, 0x00, 0x00, 0xDB, 0x00, 0x00, 0xDB, 0x00, 0x00, 0xDB,
0x00, 0x00, 0xDB, 0x00, 0x00, 0xDB, 0x00, 0x00, 0xDB, 0x00, 0x01, 0xDB, 0x80, 0x01, 0xBD, 0x80,
0x03, 0x7E, 0xC0, 0x03, 0x7E, 0xC0, 0x03, 0x7E, 0xC0, 0x03, 0x7E, 0xC0, 0x01, 0xBD, 0x80, 0x01,
0xC3, 0x80, 0x00, 0xFF, 0x00, 0x00, 0x3C, 0x00, 
};

static const unsigned PROGMEM char humidity_bmp [] = {
0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x66, 0x00, 0x00, 0xC3, 0x00, 0x00,
0xC3, 0x00, 0x01, 0x81, 0x80, 0x03, 0x00, 0xC0, 0x06, 0x00, 0x60, 0x06, 0xE0, 0x60, 0x0C, 0xF0,
0x30, 0x09, 0xB3, 0x10, 0x18, 0xF7, 0x18, 0x18, 0x4E, 0x18, 0x18, 0x1C, 0x18, 0x18, 0x38, 0x18,
0x18, 0x72, 0x18, 0x18, 0xEF, 0x18, 0x08, 0xCD, 0x90, 0x0C, 0x0F, 0x30, 0x06, 0x07, 0x60, 0x03,
0x00, 0xC0, 0x01, 0xFF, 0x80, 0x00, 0x7E, 0x00, 
};

void setup() {
  Serial.begin(9600);
  dht.begin();
  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));//check error
    for(;;); // Don't proceed, loop forever
  }
}

void loop() {
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  delay(1000);
  Serial.print(temperature);
  Serial.println(humidity);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.clearDisplay();
  display.drawBitmap(6, 6, temperature_bmp , 24 , 24, 1);
  display.setCursor(42, 12);
  display.print("Temp: ");
  display.print(temperature);
  display.print("c");
  display.drawBitmap(6, 34, humidity_bmp , 24 , 24, 1);
  display.setCursor(42, 42);
  display.print("Hum:  ");
  display.print(humidity);
  display.print("%");
  display.display();//at last, Operating Display
}
